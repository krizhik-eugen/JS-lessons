[{"/Users/eugenkrizhik/Documents/IT-incubator/JS Lessons/src/App.tsx":"1","/Users/eugenkrizhik/Documents/IT-incubator/JS Lessons/src/redux/currencyReducer.ts":"2","/Users/eugenkrizhik/Documents/IT-incubator/JS Lessons/src/index.tsx":"3","/Users/eugenkrizhik/Documents/IT-incubator/JS Lessons/src/components/CurrencyExchange/CurrencyExchange.tsx":"4","/Users/eugenkrizhik/Documents/IT-incubator/JS Lessons/src/redux/actions.ts":"5","/Users/eugenkrizhik/Documents/IT-incubator/JS Lessons/src/containers/CurrencyExchangeContainer/CurrencyEContainer.tsx":"6","/Users/eugenkrizhik/Documents/IT-incubator/JS Lessons/src/lessons/lesson2/lesson2.ts":"7","/Users/eugenkrizhik/Documents/IT-incubator/JS Lessons/src/redux/state.ts":"8"},{"size":622,"mtime":1609971786000,"results":"9","hashOfConfig":"10"},{"size":1508,"mtime":1629830713718,"results":"11","hashOfConfig":"10"},{"size":319,"mtime":1609752860000,"results":"12","hashOfConfig":"10"},{"size":3871,"mtime":1609757734000,"results":"13","hashOfConfig":"10"},{"size":1448,"mtime":1629831311235,"results":"14","hashOfConfig":"10"},{"size":6173,"mtime":1629833868105,"results":"15","hashOfConfig":"10"},{"size":4996,"mtime":1630781528562,"results":"16","hashOfConfig":"10"},{"size":286,"mtime":1609751766000,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"e4eyhr",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/eugenkrizhik/Documents/IT-incubator/JS Lessons/src/App.tsx",[],"/Users/eugenkrizhik/Documents/IT-incubator/JS Lessons/src/redux/currencyReducer.ts",[],"/Users/eugenkrizhik/Documents/IT-incubator/JS Lessons/src/index.tsx",[],["36","37"],"/Users/eugenkrizhik/Documents/IT-incubator/JS Lessons/src/components/CurrencyExchange/CurrencyExchange.tsx",[],"/Users/eugenkrizhik/Documents/IT-incubator/JS Lessons/src/redux/actions.ts",[],"/Users/eugenkrizhik/Documents/IT-incubator/JS Lessons/src/containers/CurrencyExchangeContainer/CurrencyEContainer.tsx",["38","39","40","41","42"],"import React from 'react';\r\nimport CurrencyExchange from '../../components/CurrencyExchange/CurrencyExchange';\r\nimport {CurrencyState, CurrencyType} from '../../redux/currencyReducer';\r\nimport {Dispatch} from 'redux';\r\nimport {\r\n    ChangeActionAC,\r\n    ChangeCurrencyFieldAC,\r\n    ChangeCurrentCurrencyAC,\r\n    CurrencyReducersTypes\r\n} from '../../redux/actions';\r\nimport {connect, ConnectedProps, useDispatch, useSelector} from 'react-redux';\r\nimport {selectAllCurrencyState} from \"../../redux/selectors\";\r\n\r\n/*const CurrencyEContainer: React.FC<TProps> = props => {*/\r\nconst CurrencyEContainer: React.FC = () => {\r\n    /*\r\n        const {\r\n            currencies,\r\n            currentCurrency,\r\n            isBuying,\r\n            amountOfBYN,\r\n            amountOfCurrency,\r\n            setCurrencyAmount,\r\n            setAction,\r\n            changeCurrency,\r\n        } = props;*/\r\n\r\n    /*  const {\r\n          currencies,\r\n          currentCurrency,\r\n          isBuying,\r\n          amountOfBYN,\r\n          amountOfCurrency,\r\n          ChangeCurrentCurrencyAC,\r\n          ChangeActionAC,\r\n          ChangeCurrencyFieldAC,\r\n      } = props;*/\r\n\r\n    /* const {\r\n         currencies,\r\n         currentCurrency,\r\n         isBuying,\r\n         amountOfBYN,\r\n         amountOfCurrency,\r\n     } = props;*/\r\n\r\n    const dispatch = useDispatch()\r\n    const {\r\n        currencies,\r\n        currentCurrency,\r\n        isBuying,\r\n        amountOfBYN,\r\n        amountOfCurrency\r\n    } = useSelector(selectAllCurrencyState)\r\n\r\n\r\n    let currencyRate: number = 0;\r\n    const currenciesName = currencies.map((currency: CurrencyType) => {\r\n        if (currency.currencyName === currentCurrency) {\r\n            currencyRate = isBuying ? currency.buyRate : currency.sellRate;\r\n        }\r\n        return currency.currencyName;\r\n    });\r\n\r\n    const changeCurrencyField = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        let value = e.currentTarget.value;\r\n        if (!isFinite(+value)) return;\r\n        if (e.currentTarget.dataset.currency) {\r\n            const trigger: string = e.currentTarget.dataset.currency;\r\n            if (trigger === 'byn') {\r\n                if (value === '') {\r\n                    // setCurrencyAmount(value, value);\r\n                    // ChangeCurrencyFieldAC(value, value);\r\n                    dispatch(ChangeCurrencyFieldAC(value, value));\r\n                } else {\r\n                    // setCurrencyAmount(value, (+Number(value).toFixed(2) / currencyRate).toFixed(2));\r\n                    // ChangeCurrencyFieldAC(value, (+Number(value).toFixed(2) / currencyRate).toFixed(2));\r\n                    dispatch(ChangeCurrencyFieldAC(value, (+Number(value).toFixed(2) / currencyRate).toFixed(2)));\r\n                }\r\n            } else {\r\n                if (value === '') {\r\n                    // setCurrencyAmount(value, value);\r\n                    // ChangeCurrencyFieldAC(value, value);\r\n                    dispatch(ChangeCurrencyFieldAC(value, value));\r\n                } else {\r\n                    // setCurrencyAmount((+Number(value).toFixed(2) * currencyRate).toFixed(2), value);\r\n                    // ChangeCurrencyFieldAC((+Number(value).toFixed(2) * currencyRate).toFixed(2), value);\r\n                    dispatch(ChangeCurrencyFieldAC((+Number(value).toFixed(2) * currencyRate).toFixed(2), value));\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const changeAction = (e: React.MouseEvent<HTMLSpanElement>) => {\r\n        // e.currentTarget.dataset.action === 'buy' ? setAction(true) : setAction(false);\r\n        // e.currentTarget.dataset.action === 'buy' ? ChangeActionAC(true) : ChangeActionAC(false);\r\n        e.currentTarget.dataset.action === 'buy' ? dispatch(ChangeActionAC(true)) : dispatch(ChangeActionAC(false));\r\n    };\r\n\r\n    const changeCurrentCurrency = (e: React.MouseEvent<HTMLLIElement>) => {\r\n        // e.currentTarget.dataset.currency && changeCurrency(e.currentTarget.dataset.currency);\r\n        // e.currentTarget.dataset.currency && ChangeCurrentCurrencyAC(e.currentTarget.dataset.currency);\r\n        e.currentTarget.dataset.currency && dispatch(ChangeCurrentCurrencyAC(e.currentTarget.dataset.currency));\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <CurrencyExchange\r\n                currenciesName={currenciesName}\r\n                currentCurrency={currentCurrency}\r\n                currencyRate={currencyRate}\r\n                isBuying={isBuying}\r\n                amountOfBYN={amountOfBYN}\r\n                amountOfCurrency={amountOfCurrency}\r\n                changeCurrencyField={changeCurrencyField}\r\n                changeAction={changeAction}\r\n                changeCurrentCurrency={changeCurrentCurrency}\r\n            />\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\n/*const mapStateToProps = ({currency}: { currency: CurrencyState }): CurrencyState => {\r\n    return {\r\n        currencies: currency.currencies,\r\n        currentCurrency: currency.currentCurrency,\r\n        isBuying: currency.isBuying,\r\n        amountOfBYN: currency.amountOfBYN,\r\n        amountOfCurrency: currency.amountOfCurrency,\r\n    };\r\n};*/\r\n\r\n// @ts-ignore\r\n/*const mapDispatchToProps = (dispatch: Dispatch<CurrencyReducersTypes>) : any => {\r\n    return {\r\n        setCurrencyAmount(amountOfBYN: string, amountOfCurrency: string) {\r\n            dispatch(ChangeCurrencyFieldAC(amountOfBYN, amountOfCurrency));\r\n        },\r\n        setAction(isBuying: boolean) {\r\n            dispatch(ChangeActionAC(isBuying));\r\n        },\r\n        changeCurrency(currency: string) {\r\n            dispatch(ChangeCurrentCurrencyAC(currency));\r\n        },\r\n    };\r\n};*/\r\n\r\n\r\n// const connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\n/*const connector = connect(mapStateToProps, {\r\n    ChangeCurrentCurrencyAC,\r\n    ChangeActionAC,\r\n    ChangeCurrencyFieldAC //AC тут убирают, т.к и так должно быть понятно по названию функциии, что делает функция\r\n});*/\r\n\r\n/*const connector = connect(mapStateToProps, {});\r\n\r\ntype TProps = ConnectedProps<typeof connector>;\r\n\r\nexport default connector(CurrencyEContainer);*/\r\n\r\nexport default CurrencyEContainer","/Users/eugenkrizhik/Documents/IT-incubator/JS Lessons/src/lessons/lesson2/lesson2.ts",["43","44","45","46","47"],"/Users/eugenkrizhik/Documents/IT-incubator/JS Lessons/src/redux/state.ts",[],{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":3,"column":9,"nodeType":"54","messageId":"55","endLine":3,"endColumn":22},{"ruleId":"52","severity":1,"message":"56","line":4,"column":9,"nodeType":"54","messageId":"55","endLine":4,"endColumn":17},{"ruleId":"52","severity":1,"message":"57","line":9,"column":5,"nodeType":"54","messageId":"55","endLine":9,"endColumn":26},{"ruleId":"52","severity":1,"message":"58","line":11,"column":9,"nodeType":"54","messageId":"55","endLine":11,"endColumn":16},{"ruleId":"52","severity":1,"message":"59","line":11,"column":18,"nodeType":"54","messageId":"55","endLine":11,"endColumn":32},{"ruleId":"52","severity":1,"message":"60","line":27,"column":10,"nodeType":"54","messageId":"55","endLine":27,"endColumn":13},{"ruleId":"52","severity":1,"message":"61","line":42,"column":10,"nodeType":"54","messageId":"55","endLine":42,"endColumn":21},{"ruleId":"52","severity":1,"message":"62","line":114,"column":10,"nodeType":"54","messageId":"55","endLine":114,"endColumn":18},{"ruleId":"52","severity":1,"message":"63","line":162,"column":9,"nodeType":"54","messageId":"55","endLine":162,"endColumn":18},{"ruleId":"64","severity":1,"message":"65","line":186,"column":1,"nodeType":"66","endLine":187,"endColumn":3},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"@typescript-eslint/no-unused-vars","'CurrencyState' is defined but never used.","Identifier","unusedVar","'Dispatch' is defined but never used.","'CurrencyReducersTypes' is defined but never used.","'connect' is defined but never used.","'ConnectedProps' is defined but never used.","'sum' is defined but never used.","'makeCounter' is defined but never used.","'superSum' is defined but never used.","'printList' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]